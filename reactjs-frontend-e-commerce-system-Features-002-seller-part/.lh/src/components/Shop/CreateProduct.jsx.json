{
    "sourceFile": "src/components/Shop/CreateProduct.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1703774847222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703774965274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useState } from \"react\";\n-import { AiOutlinePlusCircle } from \"react-icons/ai\";\n+import { AiOutlineClose, AiOutlinePlusCircle } from \"react-icons/ai\";\n import { useDispatch, useSelector } from \"react-redux\";\n import { useNavigate } from \"react-router-dom\";\n import { toast } from \"react-toastify\";\n import { createProduct } from \"../../redux/actions/product\";\n@@ -190,15 +190,21 @@\n             <label htmlFor=\"upload\">\n               <AiOutlinePlusCircle size={30} className=\"mt-3\" color=\"#555\" />\n             </label>\n             {images &&\n-              images.map((i) => (\n-                <img\n-                  src={URL.createObjectURL(i)}\n-                  key={i}\n-                  alt=\"\"\n-                  className=\"h-[120px] w-[120px] object-cover m-2\"\n-                />\n+              images.map((image, index) => (\n+                <div key={index} className=\"relative m-2\">\n+                  <AiOutlineClose\n+                    size={20}\n+                    className=\"absolute top-0 right-0 cursor-pointer text-red-500\"\n+                    onClick={() => handleImageRemove(index)}\n+                  />\n+                  <img\n+                    src={URL.createObjectURL(image)}\n+                    alt=\"\"\n+                    className=\"h-[120px] w-[120px] object-cover\"\n+                  />\n+                </div>\n               ))}\n           </div>\n           <br />\n           <div>\n"
                }
            ],
            "date": 1703774847222,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { createProduct } from \"../../redux/actions/product\";\nimport { categoriesData } from \"../../static/data\";\n\nconst CreateProduct = () => {\n  const { seller } = useSelector((state) => state.seller);\n  const { success, error } = useSelector((state) => state.products);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [images, setImages] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n  const [originalPrice, setOriginalPrice] = useState();\n  const [discountPrice, setDiscountPrice] = useState();\n  const [stock, setStock] = useState();\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n    if (success) {\n      toast.success(\"Product created successfully!\");\n      navigate(\"/dashboard\");\n      window.location.reload();\n    }\n  }, [dispatch, error, success]);\n\n  const handleImageChange = (e) => {\n    e.preventDefault();\n\n    let files = Array.from(e.target.files);\n    setImages((prevImages) => [...prevImages, ...files]);\n  };\n\n  const handleImageRemove = (index) => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n\n  console.log(images);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newForm = new FormData();\n\n    images.forEach((image) => {\n      newForm.append(\"images\", image);\n    });\n    newForm.append(\"name\", name);\n    newForm.append(\"description\", description);\n    newForm.append(\"category\", category);\n    newForm.append(\"tags\", tags);\n    newForm.append(\"originalPrice\", originalPrice);\n    newForm.append(\"discountPrice\", discountPrice);\n    newForm.append(\"stock\", stock);\n    newForm.append(\"shopId\", seller._id);\n    dispatch(createProduct(newForm));\n  };\n\n  return (\n    <div className=\"w-[90%] 800px:w-[50%] bg-white  shadow h-[80vh] rounded-[4px] p-3 overflow-y-scroll\">\n      <h5 className=\"text-[30px] font-Poppins text-center\">Create Product</h5>\n      {/* create product form */}\n      <form onSubmit={handleSubmit}>\n        <br />\n        <div>\n          <label className=\"pb-2\">\n            Name <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter your product name...\"\n          />\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">\n            Description <span className=\"text-red-500\">*</span>\n          </label>\n          <textarea\n            cols=\"30\"\n            required\n            rows=\"8\"\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            className=\"mt-2 appearance-none block w-full pt-2 px-3 border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Enter your product description...\"\n          ></textarea>\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">\n            Category <span className=\"text-red-500\">*</span>\n          </label>\n          <select\n            className=\"w-full mt-2 border h-[35px] rounded-[5px]\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <option value=\"Choose a category\">Choose a category</option>\n            {categoriesData &&\n              categoriesData.map((i) => (\n                <option value={i.title} key={i.title}>\n                  {i.title}\n                </option>\n              ))}\n          </select>\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">Tags</label>\n          <input\n            type=\"text\"\n            name=\"tags\"\n            value={tags}\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            onChange={(e) => setTags(e.target.value)}\n            placeholder=\"Enter your product tags...\"\n          />\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">Original Price</label>\n          <input\n            type=\"number\"\n            name=\"price\"\n            value={originalPrice}\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            onChange={(e) => setOriginalPrice(e.target.value)}\n            placeholder=\"Enter your product price...\"\n          />\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">\n            Price (With Discount) <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"number\"\n            name=\"price\"\n            value={discountPrice}\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            onChange={(e) => setDiscountPrice(e.target.value)}\n            placeholder=\"Enter your product price with discount...\"\n          />\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">\n            Product Stock <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"number\"\n            name=\"price\"\n            value={stock}\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            onChange={(e) => setStock(e.target.value)}\n            placeholder=\"Enter your product stock...\"\n          />\n        </div>\n        <br />\n        <div>\n          <label className=\"pb-2\">\n            Upload Images <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"file\"\n            name=\"\"\n            id=\"upload\"\n            className=\"hidden\"\n            multiple\n            onChange={handleImageChange}\n          />\n          <div className=\"w-full flex items-center flex-wrap\">\n            <label htmlFor=\"upload\">\n              <AiOutlinePlusCircle size={30} className=\"mt-3\" color=\"#555\" />\n            </label>\n            {images &&\n              images.map((i) => (\n                <img\n                  src={URL.createObjectURL(i)}\n                  key={i}\n                  alt=\"\"\n                  className=\"h-[120px] w-[120px] object-cover m-2\"\n                />\n              ))}\n          </div>\n          <br />\n          <div>\n            <input\n              type=\"submit\"\n              value=\"Create\"\n              className=\"mt-2 cursor-pointer appearance-none text-center block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateProduct;\n"
        }
    ]
}