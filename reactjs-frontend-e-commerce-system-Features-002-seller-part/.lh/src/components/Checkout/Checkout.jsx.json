{
    "sourceFile": "src/components/Checkout/Checkout.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1705414067093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1705414067093,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\nimport { Country, State } from \"country-state-city\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { server } from \"../../server\";\nimport styles from \"../../styles/styles\";\n\nconst Checkout = () => {\n  const { user } = useSelector((state) => state.user);\n  const { cart } = useSelector((state) => state.cart);\n  const [country, setCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [userInfo, setUserInfo] = useState(false);\n  const [address1, setAddress1] = useState(\"\");\n  const [address2, setAddress2] = useState(\"\");\n  const [zipCode, setZipCode] = useState(null);\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [couponCodeData, setCouponCodeData] = useState(null);\n  const [discountPrice, setDiscountPrice] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const paymentSubmit = () => {\n   if(address1 === \"\" || address2 === \"\" || zipCode === null || country === \"\" || city === \"\"){\n      toast.error(\"Please choose your delivery address!\")\n   } else{\n    const shippingAddress = {\n      address1,\n      address2,\n      zipCode,\n      country,\n      city,\n    };\n\n    const orderData = {\n      cart,\n      totalPrice,\n      subTotalPrice,\n      shipping,\n      discountPrice,\n      shippingAddress,\n      user,\n    }\n\n    // update local storage with the updated orders array\n    localStorage.setItem(\"latestOrder\", JSON.stringify(orderData));\n    navigate(\"/payment\");\n   }\n  };\n\n  const subTotalPrice = cart.reduce(\n    (acc, item) => acc + item.qty * item.discountPrice,\n    0\n  );\n\n  // this is shipping cost variable\n  const shipping = subTotalPrice * 0.1;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const name = couponCode;\n\n    await axios.get(`${server}/coupon/get-coupon-value/${name}`).then((res) => {\n      const shopId = res.data.couponCode?.shopId;\n      const couponCodeValue = res.data.couponCode?.value;\n      if (res.data.couponCode !== null) {\n        const isCouponValid =\n          cart && cart.filter((item) => item.shopId === shopId);\n\n        if (isCouponValid.length === 0) {\n          toast.error(\"Coupon code is not valid for this shop\");\n          setCouponCode(\"\");\n        } else {\n          const eligiblePrice = isCouponValid.reduce(\n            (acc, item) => acc + item.qty * item.discountPrice,\n            0\n          );\n          const discountPrice = (eligiblePrice * couponCodeValue) / 100;\n          setDiscountPrice(discountPrice);\n          setCouponCodeData(res.data.couponCode);\n          setCouponCode(\"\");\n        }\n      }\n      if (res.data.couponCode === null) {\n        toast.error(\"Coupon code doesn't exists!\");\n        setCouponCode(\"\");\n      }\n    });\n  };\n\n  const discountPercentenge = couponCodeData ? discountPrice : \"\";\n\n  const totalPrice = couponCodeData\n    ? (subTotalPrice + shipping - discountPercentenge).toFixed(2)\n    : (subTotalPrice + shipping).toFixed(2);\n\n  console.log(discountPercentenge);\n\n  return (\n    <div className=\"w-full flex flex-col items-center py-8\">\n      <div className=\"w-[90%] 1000px:w-[70%] block 800px:flex\">\n        <div className=\"w-full 800px:w-[65%]\">\n          <ShippingInfo\n            user={user}\n            country={country}\n            setCountry={setCountry}\n            city={city}\n            setCity={setCity}\n            userInfo={userInfo}\n            setUserInfo={setUserInfo}\n            address1={address1}\n            setAddress1={setAddress1}\n            address2={address2}\n            setAddress2={setAddress2}\n            zipCode={zipCode}\n            setZipCode={setZipCode}\n          />\n        </div>\n        <div className=\"w-full 800px:w-[35%] 800px:mt-0 mt-8\">\n          <CartData\n            handleSubmit={handleSubmit}\n            totalPrice={totalPrice}\n            shipping={shipping}\n            subTotalPrice={subTotalPrice}\n            couponCode={couponCode}\n            setCouponCode={setCouponCode}\n            discountPercentenge={discountPercentenge}\n          />\n        </div>\n      </div>\n      <div\n        className={`${styles.button} w-[150px] 800px:w-[280px] mt-10`}\n        onClick={paymentSubmit}\n      >\n        <h5 className=\"text-white\">Go to Payment</h5>\n      </div>\n    </div>\n  );\n};\n\nconst ShippingInfo = ({\n  user,\n  country,\n  setCountry,\n  city,\n  setCity,\n  userInfo,\n  setUserInfo,\n  address1,\n  setAddress1,\n  address2,\n  setAddress2,\n  zipCode,\n  setZipCode,\n}) => {\n  return (\n    <div className=\"w-full 800px:w-[95%] bg-white rounded-md p-5 pb-8\">\n      <h5 className=\"text-[18px] font-[500]\">Shipping Address</h5>\n      <br />\n      <form>\n        <div className=\"w-full flex pb-3\">\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Full Name</label>\n            <input\n              type=\"text\"\n              value={user && user.name}\n              required\n              className={`${styles.input} !w-[95%]`}\n            />\n          </div>\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Email Address</label>\n            <input\n              type=\"email\"\n              value={user && user.email}\n              required\n              className={`${styles.input}`}\n            />\n          </div>\n        </div>\n\n        <div className=\"w-full flex pb-3\">\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Phone Number</label>\n            <input\n              type=\"number\"\n              required\n              value={user && user.phoneNumber}\n              className={`${styles.input} !w-[95%]`}\n            />\n          </div>\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Zip Code</label>\n            <input\n              type=\"number\"\n              value={zipCode}\n              onChange={(e) => setZipCode(e.target.value)}\n              required\n              className={`${styles.input}`}\n            />\n          </div>\n        </div>\n\n        <div className=\"w-full flex pb-3\">\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Country</label>\n            <select\n              className=\"w-[95%] border h-[40px] rounded-[5px]\"\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n            >\n              <option className=\"block pb-2\" value=\"\">\n                Choose your country\n              </option>\n              {Country &&\n                Country.getAllCountries().map((item) => (\n                  <option key={item.isoCode} value={item.isoCode}>\n                    {item.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">City</label>\n            <select\n              className=\"w-[95%] border h-[40px] rounded-[5px]\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            >\n              <option className=\"block pb-2\" value=\"\">\n                Choose your City\n              </option>\n              {State &&\n                State.getStatesOfCountry(country).map((item) => (\n                  <option key={item.isoCode} value={item.isoCode}>\n                    {item.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"w-full flex pb-3\">\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Address1</label>\n            <input\n              type=\"address\"\n              required\n              value={address1}\n              onChange={(e) => setAddress1(e.target.value)}\n              className={`${styles.input} !w-[95%]`}\n            />\n          </div>\n          <div className=\"w-[50%]\">\n            <label className=\"block pb-2\">Address2</label>\n            <input\n              type=\"address\"\n              value={address2}\n              onChange={(e) => setAddress2(e.target.value)}\n              required\n              className={`${styles.input}`}\n            />\n          </div>\n        </div>\n\n        <div></div>\n      </form>\n      <h5\n        className=\"text-[18px] cursor-pointer inline-block\"\n        onClick={() => setUserInfo(!userInfo)}\n      >\n        Choose From saved address\n      </h5>\n      {userInfo && (\n        <div>\n          {user &&\n            user.addresses.map((item, index) => (\n              <div className=\"w-full flex mt-1\">\n                <input\n                  type=\"checkbox\"\n                  className=\"mr-3\"\n                  value={item.addressType}\n                  onClick={() =>\n                    setAddress1(item.address1) ||\n                    setAddress2(item.address2) ||\n                    setZipCode(item.zipCode) ||\n                    setCountry(item.country) ||\n                    setCity(item.city)\n                  }\n                />\n                <h2>{item.addressType}</h2>\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst CartData = ({\n  handleSubmit,\n  totalPrice,\n  shipping,\n  subTotalPrice,\n  couponCode,\n  setCouponCode,\n  discountPercentenge,\n}) => {\n  return (\n    <div className=\"w-full bg-[#fff] rounded-md p-5 pb-8\">\n      <div className=\"flex justify-between\">\n        <h3 className=\"text-[16px] font-[400] text-[#000000a4]\">subtotal:</h3>\n        <h5 className=\"text-[18px] font-[600]\">${subTotalPrice}</h5>\n      </div>\n      <br />\n      <div className=\"flex justify-between\">\n        <h3 className=\"text-[16px] font-[400] text-[#000000a4]\">shipping:</h3>\n        <h5 className=\"text-[18px] font-[600]\">${shipping.toFixed(2)}</h5>\n      </div>\n      <br />\n      <div className=\"flex justify-between border-b pb-3\">\n        <h3 className=\"text-[16px] font-[400] text-[#000000a4]\">Discount:</h3>\n        <h5 className=\"text-[18px] font-[600]\">\n          - {discountPercentenge ? \"$\" + discountPercentenge.toString() : null}\n        </h5>\n      </div>\n      <h5 className=\"text-[18px] font-[600] text-end pt-3\">${totalPrice}</h5>\n      <br />\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className={`${styles.input} h-[40px] pl-2`}\n          placeholder=\"Coupoun code\"\n          value={couponCode}\n          onChange={(e) => setCouponCode(e.target.value)}\n          required\n        />\n        <input\n          className={`w-full h-[40px] border border-[#f63b60] text-center text-[#f63b60] rounded-[3px] mt-8 cursor-pointer`}\n          required\n          value=\"Apply code\"\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Checkout;\n"
        }
    ]
}