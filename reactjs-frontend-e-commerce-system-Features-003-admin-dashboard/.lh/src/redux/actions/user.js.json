{
    "sourceFile": "src/redux/actions/user.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1705453808442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1705453808442,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\nimport { server } from \"../../server\";\n\n// load user\nexport const loadUser = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"LoadUserRequest\",\n    });\n    const { data } = await axios.get(`${server}/user/getuser`, {\n      withCredentials: true,\n    });\n    dispatch({\n      type: \"LoadUserSuccess\",\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadUserFail\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// load seller\nexport const loadSeller = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"LoadSellerRequest\",\n    });\n    const { data } = await axios.get(`${server}/shop/getSeller`, {\n      withCredentials: true,\n    });\n    dispatch({\n      type: \"LoadSellerSuccess\",\n      payload: data.seller,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadSellerFail\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// User update information\nexport const updateUserInformation =\n  (name, email, phoneNumber, password) => async (dispatch) => {\n    try {\n      dispatch({\n        type: \"updateUserInfoRequest\",\n      });\n\n      const { data } = await axios.put(\n        `${server}/user/update-user-info`,\n        {\n          name,\n          email,\n          phoneNumber,\n          password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      dispatch({\n        type: \"updateUserInfoSuccess\",\n        payload: data.user,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"updateUserInfoFailed\",\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n// update user address\nexport const updatUserAddress =\n  (country, city, address1, address2, zipCode, addressType) =>\n  async (dispatch) => {\n    try {\n      dispatch({\n        type: \"updateUserAddressRequest\",\n      });\n\n      const { data } = await axios.put(\n        `${server}/user/update-user-addresses`,\n        {\n          country,\n          city,\n          address1,\n          address2,\n          zipCode,\n          addressType,\n        },\n        { withCredentials: true }\n      );\n\n      dispatch({\n        type: \"updateUserAddressSuccess\",\n        payload: {\n          successMessage: \"User address updated succesfully!\",\n          user: data.user,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: \"updateUserAddressFailed\",\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"deleteUserAddressRequest\",\n    });\n\n    const { data } = await axios.delete(\n      `${server}/user/delete-user-address/${id}`,\n      { withCredentials: true }\n    );\n\n    dispatch({\n      type: \"deleteUserAddressSuccess\",\n      payload: {\n        successMessage: \"Address deleted successfully!\",\n        user: data.user,\n      },\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteUserAddressFailed\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// get all users --- admin\nexport const getAllUsers = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"getAllUsersRequest\",\n    });\n\n    const { data } = await axios.get(`${server}/user/admin-all-users`, {\n      withCredentials: true,\n    });\n\n    dispatch({\n      type: \"getAllUsersSuccess\",\n      payload: data.users,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAllUsersFailed\",\n      payload: error.response.data.message,\n    });\n  }\n};"
        }
    ]
}